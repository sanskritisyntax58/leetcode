#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
    int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {
        unordered_map<int, int> sumAB; // stores sum of pairs from A and B

        // Compute all sums of pairs from A and B
        for (int a : A) {
            for (int b : B) {
                sumAB[a + b]++;
            }
        }

        int count = 0;
        // Check pairs from C and D to see if complement exists in sumAB
        for (int c : C) {
            for (int d : D) {
                int complement = -(c + d);
                if (sumAB.find(complement) != sumAB.end()) {
                    count += sumAB[complement];
                }
            }
        }

        return count;
    }
};
